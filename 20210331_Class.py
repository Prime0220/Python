############################ 리스트 할당과 복사 ################################
#
#   - 리스트의 할당은  두 리스트가 한 메모리 공간을 공유하는 형태이다.
#   - 한 리스트의 내용이 변경되면 같은 리스트가 할당된 다른 리스트에서도 변경된 내용에
#     접근할 수 있다.
#

a = [1, 2, 3, 4, 5]
b = a
print(id(a))
print(id(b))
print(a)
print(b)
b[3] = 400
print(a)    # - 리스트 b의 값을 리스트를 공유하는 a도 내용이 변경되어있다.
print(b)

print('--' * 45)

# - 위와 같이 할당이 아닌 리스트의 복사본을 만드려면 copy 메소드를 사용한다.

c = [1, 2, 3, 4, 5]
d = c.copy()
print(id(c))
print(id(d))
print(c)
print(d)
c[3] = 400
#리스트 c와 d는 별도의 기억장소에 존재하는 리스트이므로 d의 내용 변경이 c에 영향을 주지 않는다.
print(c)
print(d)

print('--' * 45)

# - 리스트 내용을 모두 삭제하기
e = [1, 2, 3, 4, 5]
f = [6, 7, 8, 9, 10]

e.clear()   # clear 메소드를 사용해 리스트의 요소들을 모두 삭제할 수 있다.
del f[:]    # del 명령어와 슬라이스를 활용해서 리스트의 요소들을 모두 삭제할 수 있다.
print(e)
print(f)

print('--' * 45)

############################ 리스트를 반복문과 사용하기 ################################
#
# - 지금까지 리스트를 반복문에서 사용할 때 다음 예제와 같이 리스트의 요소를 순차적으로 가져와 사용했다.

g = ['서울' , '인천' , '대전' , '춘천' , '전주' , '광주' , '부산' , '울산']

for i in a:
    print(i, end = '-')

print('--' * 45)

#   - 반복문에서 리스트를 사용할 때 요소의 값과 함께 인덱스의 값도 같이 사용하고 싶을 때 다음과 같이 할 수 있다.
#       - for 인덱스, 요소 in enumerate(리스트)

h = ['서울' , '인천' , '대전' , '춘천' , '전주' , '광주' , '부산' , '울산']

for index, city in  enumerate(a):
    print(city, '(',index,')')

print('--' * 45)

################################# 리스트 표현식 #####################################
#
#   - 리스트 안에 반복문이나 조건문을 사용해서 리스트를 생성할 수 있다.
#
# 리스트 안에 반복문을 사용해서 리스트를 생성하는 예제

# 0부터 9까지의 값을 요소로 갖는 리스트 생성
i = [j for j in range(10)]
print(i)

print('--' * 45)

# 1부터 10까지의 값을 요소로 갖는 리스트 생성
k = [l+1 for l in range(10)]
print(k)

print('--' * 45)

#   - if 문을 리스트 표현식에 넣어 리스트를 생성할 수 있다.
#       - [식 for 변수 in 리스트 if 조건식]
#       - list(식 for 변수 in 리스트 if 조건식)

# 0 ~ 9 숫자 중 홀수에 5를 더하여 리스트를 생성한다.

listA = [m + 5 for m in range(10) if m % 2 == 1]
print(listA)

print('--'*45)

############################ 1. List에 map함수 사용하기 ################################
#
#   - map 함수를 이용해 리스트(튜플이나 range 객체 등도 가능)의 요소를 지정된 함수로 처리해주는 함수이다.
#   - map 함수는 원본 리스트를 변경하지 않고 새 리스트를 생성한다. (원본 리스트는 변경되지 않는다.)

#실수가 저장된 리스트의 모든 요소를 정수로 변환하는 예제 (반복문)

n =[1.3, 2.6, 3.5, 4.7, 5.2]
for for_a in range(len(n)) :
    n[for_a] = int(n[for_a])
print(n)

print('--'*45)

#   - 위의 반복문으로 작성한 예제를 map함수를 사용해 작성하면 아래와 같습니다.










    

